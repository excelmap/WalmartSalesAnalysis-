Exploratory Data Analysis Walmart Superstore via MySQL
---- Create Database in MySql -----
create database wsales;
use wsales;
CREATE TABLE sales (
invoice_id VARCHAR(30) NOT NULL PRIMARY KEY, 
branch varchar(5) NOT NULL,
City VARCHAR(30) NOT NULL,
customer_type varchar(30) NOT NULL,
product_line varchar(100) NOT NULL,
unit_price DECIMAL(10,2) NOT NULL,
quantity INT NOT NULL,
tax_pct FLOAT(6,4) NOT NULL,
total DECIMAL(12,4) NOT NULL,
sales_date CHAR(10) NOT NULL,
time TIME NOT NULL,
cogs DECIMAL(10,2) NOT NULL,
gross_margin_pct FLOAT(11,9),
gross_income DECIMAL(12,4),
rating FLOAT(2,1)
);
SELECT * FROM sales;
--- Cleaning and correcting the error of the import table ---
SELECT * FROM sales;
ALTER TABLE sales add column payment varchar(30) not null;
UPDATE sales SET sales_date = str_to_date(sales_date, "%d/%m/%Y"); 
ALTER TABLE sales CHANGE sales_date Date date;

----- Add time_of_day in table column -----
ALTER TABLE sales ADD COLUMN time_of_day VARCHAR(20); 
UPDATE sales SET time_of_day = (
    CASE 
         WHEN 'time' BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
         WHEN 'time' BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
         ELSE "Evening"
         END
); 
select time,
(CASE 
 WHEN 'time' BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
         WHEN 'time' BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
         ELSE "Evening"
         END) AS time_of_day
         from sales; 
---- Add month_name in the column in the table ----
ALTER TABLE sales ADD month_name VARCHAR(15); 
UPDATE sales SET month_name = monthname(DATE); 
----- Explatory  Data Analysis -----
-- How many unique cities does data have? --- #3, Yangon, Naypyitaw, Mandalay
SELECT DISTINCT City FROM sales; 
---- In which City EACH branch has? ---- # Branch A Yangon, Branch B Mandalay, Branch C Naypyitaw
SELECT DISTINCT City, Branch FROM sales; 

---- How many unique product Lines does the data have? ----- # 995
SELECT distinct (product_line) FROM sales; 
SELECT distinct count(product_line) FROM sales; 
----- What is the most selling product lines)-----# Higest Selling product_line Electronic Accessories Qty 961 and Lowest is Health and Beauty Qty 844
SELECT sum(quantity) as qty, product_line FROM sales
GROUP BY product_line
ORDER BY qty DESC; 
--- What is the total revenue by month? --- # Highest Revenue January Month and Lowest February
SELECT month_name AS month,
       sum(total) AS total_revenue
       FROM sales
       GROUP BY month_name
       ORDER BY total_revenue;
----- Which month has the largest COGS? ----- # Highest COGS January and Lowest in February
SELECT month_name AS Month,
	   sum(cogs) AS cogs
       FROM sales
       GROUP BY month_name
       ORDER BY cogs; 
----- List the product line that has the largest revenue -----
SELECT product_line, sum(total) As total_revenue
FROM sales
GROUP BY product_line
ORDER BY total_revenue DESC; 
----- Which product line has the highest VAT? ----- # Home and Lifestyle 16.03033124
SELECT product_line, avg(tax_pct) AS avg_tax
FROM sales 
GROUP BY product_line 
ORDER BY avg_tax DESC; 
------ Fetch the product line based on good or bad -----
SELECT avg(quantity) AS avg_qnty
FROM sales;
SELECT product_line, 
CASE 
	WHEN AVG(quantity)>6 THEN "Good"
    ELSE "Bad" 
END AS remark
FROM sales
GROUP BY product_line; 
----- Which branch sold more product than the average? -----
SELECT branch, sum(quantity) AS qty.
FROM sales
GROUP BY branch
Having sum(quantity)>(SELECT avg(quantity) FROM sales); 
------- What is the most common product line by gender? ------
SELECT gender, product_line, count(gender) AS total_cnt
FROM sales
GROUP BY gender, product_line
ORDER BY total_cnt DESC
limit 5;
------ What is the average rating of each product line? ------
SELECT round(AVG(rating), 2) AS avg_rating, product_line
FROM sales
GROUP BY product_line
ORDER BY avg_rating DESC;  
------ How many unique customers type does the data have? ---
SELECT DISTINCT customer_type FROM sales; 
----- How many unique payments does the data have? ----- # 995
SELECT DISTINCT count(payment)
FROM sales; 
----- What is the most common customer type? ----- # Normal 496 and Member 499
SELECT customer_type, count(*)
FROM sales
GROUP BY customer_type; 
----- What is the gender most of the customer? ---- # Male 498, Female 497
SELECT gender, count(*) as gender_cnt
FROM sales
GROUP BY gender
ORDER BY gender_cnt DESC; 
----- Which time of the day tdo customer give most raing? ----- # Evening, avg_rating = 6.95749
SELECT time_of_day, avg(rating) AS avg_rating
FROM sales
GROUP BY time_of_day
ORDER BY avg_rating DESC;
----- Which  month has the best average rating per branch? ------ # January -7.07815, February-6.99370, March-6.9572
SELECT month_name, avg(rating) AS avg_rating
FROM sales
Where branch = "A"
GROUP BY month_name
ORDER BY avg_rating DESC;
----- Number of sales made in each time of day per month ----- # Evening, total_sales - 344;
SELECT time_of_day, count(*) AS total_sales
FROM sales
WHERE month_name = "March"
GROUP BY time_of_day
ORDER BY total_sales DESC;
----- Which of the customer type brings the most revenue? -----
SELECT customer_type, sum(total) AS total_revenue
FROM sales
GROUP BY customer_type
ORDER BY total_revenue;
------ Which City has the largest tax/VAT percent? ----- Naypyitaw 16.09
SELECT City, round(AVG(tax_pct), 2) AS avg_tax_pct
FROM sales
GROUP BY City
ORDER BY avg_tax_pct DESC;
----- Which customer type pays the most in VAT? ------ # Normal - 15.09805040, Member - 15.61457214
SELECT customer_type, AVG(tax_pct) AS total_tax
FROM Sales
GROUP BY customer_type
ORDER BY total_tax;






